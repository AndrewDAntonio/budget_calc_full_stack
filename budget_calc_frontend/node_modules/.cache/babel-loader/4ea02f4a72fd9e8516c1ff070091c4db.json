{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdantonio/Desktop/budget_calc_full_stack/budget_calc_frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList';\nimport ExpenseForm from './components/ExpenseForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n  function fetchExpenses() {\n    fetch('http://localhost:3000/expenses').then(r => r.json()).then(data => setExpenses(data));\n  }\n\n  ;\n\n  function postExpense(expense) {\n    fetch('http://localhost:3000/expenses', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify(expense)\n    }).then(r => r.json()).then(newExpense => {\n      setExpenses([...expenses, newExpense]);\n    });\n  }\n\n  useEffect(() => {\n    fetchExpenses();\n  }, []); //************** state values  **************/\n  // all expenses, add expense\n\n  const [expenses, setExpenses] = useState([]); // single expense\n\n  const [charge, setCharge] = useState(''); // single amount\n\n  const [amount, setAmount] = useState(''); // alert\n  // const[alert, showAlert] = useState({show: false})\n  //************** functionality  **************/\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (charge !== '' && amount > 0) {\n      const singleExpense = {\n        charge,\n        amount\n      };\n      postExpense(singleExpense);\n      console.log(singleExpense);\n    } else {//handle calling an Alert\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Budget Calculator\"), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpenseForm, {\n    charge: charge,\n    amount: amount,\n    handleCharge: handleCharge,\n    handleAmount: handleAmount,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ExpenseList, {\n    expenses: expenses,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Total Spending: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, \"$\", expenses.reduce((acc, curr) => {\n    return acc += parseInt(curr.amount);\n  }, 0))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewdantonio/Desktop/budget_calc_full_stack/budget_calc_frontend/src/App.js"],"names":["React","useState","useEffect","ExpenseList","ExpenseForm","Alert","App","fetchExpenses","fetch","then","r","json","data","setExpenses","postExpense","expense","method","headers","credentials","body","JSON","stringify","newExpense","expenses","charge","setCharge","amount","setAmount","handleCharge","e","target","value","handleAmount","handleSubmit","preventDefault","singleExpense","console","log","reduce","acc","curr","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList'\nimport ExpenseForm from './components/ExpenseForm'\nimport Alert from './components/Alert'\n\n\n\n\n\n\n\n\nfunction App() {\n  \n\n  function fetchExpenses() {\n    fetch('http://localhost:3000/expenses')\n    .then(r => r.json())\n    .then(data => setExpenses(data))\n  };\n\n  function postExpense(expense) {\n    fetch('http://localhost:3000/expenses', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\" \n      },\n      credentials: \"include\",\n      body: JSON.stringify(expense)\n    })\n    .then(r => r.json())\n    .then(newExpense => {\n      setExpenses([...expenses, newExpense])\n    })\n\n\n  }\n\n  useEffect(() => {\n    \n    fetchExpenses();\n  }, [])\n\n  //************** state values  **************/\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState([])\n  // single expense\n  const [charge, setCharge] = useState('')\n  // single amount\n  const [amount, setAmount] = useState('')\n  // alert\n  // const[alert, showAlert] = useState({show: false})\n\n  //************** functionality  **************/\n  const handleCharge = e => {\n    setCharge(e.target.value)\n  }\n\n  const handleAmount = e => {\n    setAmount(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge !== '' && amount > 0) {\n      const singleExpense = {charge, amount}\n      postExpense(singleExpense)\n      console.log(singleExpense)\n    }\n    else {\n      //handle calling an Alert\n    }\n  }\n\n  \n\n  return (\n    \n    <>\n      {/* {alert.show && <Alert type={alert.type} text={alert.text}/>} */}\n      <h1>Budget Calculator</h1>\n      <main className='App'>\n        <ExpenseForm charge={charge} amount={amount} handleCharge={handleCharge} handleAmount={handleAmount} handleSubmit={handleSubmit}/>\n        <ExpenseList expenses={expenses}/>\n      </main>\n      <h1>\n        Total Spending: <span className=\"total\">\n          ${expenses.reduce((acc, curr) =>{\n            return acc += parseInt(curr.amount)\n          },0)}\n        </span>\n      </h1>\n      \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}