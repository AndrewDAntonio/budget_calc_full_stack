{"ast":null,"code":"var _jsxFileName = \"/Users/andrewdantonio/Desktop/budget_calc_full_stack/budget_calc_frontend/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList';\nimport ExpenseForm from './components/ExpenseForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n  //************** state values  **************/\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState([]); // single expense\n\n  const [charge, setCharge] = useState(''); // single amount\n\n  const [amount, setAmount] = useState(''); // alert\n  // const[alert, showAlert] = useState({show: false})\n  // ********* fetch functions ********** //\n\n  function fetchExpenses() {\n    fetch('http://localhost:3000/expenses').then(r => r.json()).then(data => setExpenses(data));\n  }\n\n  ;\n\n  function postExpense(expense) {\n    fetch('http://localhost:3000/expenses', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(expense)\n    }).then(r => r.json()).then(newExpense => {\n      setExpenses([...expenses, newExpense]);\n      setAmount('');\n      setCharge('');\n    });\n  }\n\n  function deleteExpense(id) {\n    fetch(`http://localhost:3000/expenses/${id}`, {\n      method: 'DELETE'\n    }).then(r => r.json()).then(deletedExpense => {\n      const spliceIndex = expenses.findIndex(ele => ele.id === deletedExpense.id);\n      let testExpenses = expenses;\n      testExpenses; // expenses.splice(spliceIndex,1)\n\n      setExpenses(expenses);\n      console.log(expenses);\n    });\n  } // ************* initial fetch **************/\n\n\n  useEffect(() => {\n    fetchExpenses();\n  }, []); //************** functionality  **************/\n\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n\n  const handleAmount = e => {\n    setAmount(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (charge !== '' && amount > 0) {\n      const singleExpense = {\n        charge,\n        amount\n      };\n      postExpense(singleExpense);\n    } else {//handle calling an Alert\n    }\n  };\n\n  const handleDelete = e => {\n    e.preventDefault();\n    const id = e.target.closest('.clear-btn').value;\n    deleteExpense(id);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Budget Calculator\"), /*#__PURE__*/React.createElement(\"main\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExpenseForm, {\n    charge: charge,\n    amount: amount,\n    handleCharge: handleCharge,\n    handleAmount: handleAmount,\n    handleSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ExpenseList, {\n    expenses: expenses,\n    handleDelete: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, \"Total Spending: \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"$\", expenses.reduce((acc, curr) => {\n    return acc += parseInt(curr.amount);\n  }, 0))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andrewdantonio/Desktop/budget_calc_full_stack/budget_calc_frontend/src/App.js"],"names":["React","useState","useEffect","ExpenseList","ExpenseForm","Alert","App","expenses","setExpenses","charge","setCharge","amount","setAmount","fetchExpenses","fetch","then","r","json","data","postExpense","expense","method","headers","body","JSON","stringify","newExpense","deleteExpense","id","deletedExpense","spliceIndex","findIndex","ele","testExpenses","console","log","handleCharge","e","target","value","handleAmount","handleSubmit","preventDefault","singleExpense","handleDelete","closest","reduce","acc","curr","parseInt"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ExpenseList from './components/ExpenseList'\nimport ExpenseForm from './components/ExpenseForm'\nimport Alert from './components/Alert'\n\n\n\n\n\n\n\n\nfunction App() {\n  \n\n\n  //************** state values  **************/\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState([])\n  // single expense\n  const [charge, setCharge] = useState('')\n  // single amount\n  const [amount, setAmount] = useState('')\n  // alert\n  // const[alert, showAlert] = useState({show: false})\n\n  // ********* fetch functions ********** //\n  function fetchExpenses() {\n    fetch('http://localhost:3000/expenses')\n    .then(r => r.json())\n    .then(data => setExpenses(data))\n  };\n\n  function postExpense(expense) {\n    \n    fetch('http://localhost:3000/expenses', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\" \n      },\n      body: JSON.stringify(expense)\n    })\n    .then(r => r.json())\n    .then(newExpense => {\n      setExpenses([...expenses, newExpense])\n      setAmount('')\n      setCharge('')\n    })\n\n\n  }\n\n  function deleteExpense(id) {\n    fetch(`http://localhost:3000/expenses/${id}`, {\n      method: 'DELETE'\n    })\n    .then(r => r.json())\n    .then(deletedExpense => {\n      const spliceIndex = expenses.findIndex(ele => ele.id === deletedExpense.id)\n      let testExpenses = expenses\n      testExpenses\n        // expenses.splice(spliceIndex,1)\n        setExpenses(expenses)\n        console.log(expenses)\n        \n    })\n  }\n  \n  // ************* initial fetch **************/\n  useEffect(() => {\n    \n    fetchExpenses();\n  }, [])\n  //************** functionality  **************/\n  const handleCharge = e => {\n    setCharge(e.target.value)\n  }\n\n  const handleAmount = e => {\n    setAmount(e.target.value)\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (charge !== '' && amount > 0) {\n      const singleExpense = {charge, amount}\n      postExpense(singleExpense)\n    }\n    else {\n      //handle calling an Alert\n    }\n  }\n\n  const handleDelete = e => {\n    e.preventDefault();\n    const id = e.target.closest('.clear-btn').value\n    deleteExpense(id)\n    \n\n    \n  }\n\n\n  return (\n    \n    <>\n      {/* {alert.show && <Alert type={alert.type} text={alert.text}/>} */}\n      <h1>Budget Calculator</h1>\n      <main className='App'>\n        <ExpenseForm charge={charge} amount={amount} handleCharge={handleCharge} handleAmount={handleAmount} handleSubmit={handleSubmit} />\n        <ExpenseList expenses={expenses} handleDelete={handleDelete}/>\n      </main>\n      <h1>\n        Total Spending: <span className=\"total\">\n          ${expenses.reduce((acc, curr) =>{\n            return acc += parseInt(curr.amount)\n          },0)}\n        </span>\n      </h1>\n      \n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}